==38555== Memcheck, a memory error detector
==38555== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==38555== Using Valgrind-3.14.0-353a3587bb-20181007X and LibVEX; rerun with -h for copyright info
==38555== Command: ./a.out server 1 8 8 switch_out/ server_out/
==38555== Parent PID: 4109
==38555== 
--38555-- 
--38555-- Valgrind options:
--38555--    --leak-check=full
--38555--    --show-leak-kinds=all
--38555--    --track-origins=yes
--38555--    --verbose
--38555--    --log-file=valgrind-out.txt
--38555-- Contents of /proc/version:
--38555--   Linux version 3.10.0-1062.12.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Tue Feb 4 23:02:59 UTC 2020
--38555-- 
--38555-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--38555-- Page sizes: currently 4096, max supported 4096
--38555-- Valgrind library directory: /usr/lib64/valgrind
--38555-- Reading syms from /home/yamit/SwitchServerMechanismPrototype_git/SwitchServerMechanismPrototype/a.out
--38555-- Reading syms from /usr/lib64/ld-2.17.so
--38555-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--38555--    object doesn't have a symbol table
--38555--    object doesn't have a dynamic symbol table
--38555-- Scheduler: using generic scheduler lock implementation.
--38555-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==38555== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-38555-by-yamit-on-lux.technion.ac.il
==38555== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-38555-by-yamit-on-lux.technion.ac.il
==38555== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-38555-by-yamit-on-lux.technion.ac.il
==38555== 
==38555== TO CONTROL THIS PROCESS USING vgdb (which you probably
==38555== don't want to do, unless you know exactly what you're doing,
==38555== or are doing some strange experiment):
==38555==   /usr/lib64/valgrind/../../bin/vgdb --pid=38555 ...command...
==38555== 
==38555== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==38555==   /path/to/gdb ./a.out
==38555== and then give GDB the following command
==38555==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=38555
==38555== --pid is optional if only one valgrind process is running
==38555== 
--38555-- REDIR: 0x4019df0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c66c5 (???)
--38555-- REDIR: 0x4019bc0 (ld-linux-x86-64.so.2:index) redirected to 0x580c66df (???)
--38555-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--38555-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
==38555== WARNING: new redirection conflicts with existing -- ignoring it
--38555--     old: 0x04019df0 (strlen              ) R-> (0000.0) 0x580c66c5 ???
--38555--     new: 0x04019df0 (strlen              ) R-> (2007.0) 0x04c2d0e0 strlen
--38555-- REDIR: 0x4019d70 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e230 (strcmp)
--38555-- REDIR: 0x401aa30 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31de0 (mempcpy)
--38555-- Reading syms from /usr/lib64/libc-2.17.so
--38555-- REDIR: 0x4ec70e0 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--38555-- REDIR: 0x4ec3e60 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--38555-- REDIR: 0x4ec93b0 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--38555-- REDIR: 0x4ec68c0 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--38555-- REDIR: 0x4ec6870 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--38555-- REDIR: 0x4ec5850 (libc.so.6:__GI_strrchr) redirected to 0x4c2caa0 (__GI_strrchr)
--38555-- REDIR: 0x4ec22e0 (libc.so.6:strcmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--38555-- REDIR: 0x4f75d40 (libc.so.6:__strcmp_sse42) redirected to 0x4c2e1e0 (__strcmp_sse42)
--38555-- REDIR: 0x4ecd370 (libc.so.6:strchrnul) redirected to 0x4c31900 (strchrnul)
--38555-- REDIR: 0x4ebceb0 (libc.so.6:free) redirected to 0x4c2af16 (free)
==38555== 
==38555== HEAP SUMMARY:
==38555==     in use at exit: 0 bytes in 0 blocks
==38555==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==38555== 
==38555== All heap blocks were freed -- no leaks are possible
==38555== 
==38555== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==38555== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
